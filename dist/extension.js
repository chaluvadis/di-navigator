"use strict";var Se=Object.create;var G=Object.defineProperty;var ve=Object.getOwnPropertyDescriptor;var Ie=Object.getOwnPropertyNames;var Ee=Object.getPrototypeOf,ye=Object.prototype.hasOwnProperty;var Te=(o,e)=>{for(var t in e)G(o,t,{get:e[t],enumerable:!0})},J=(o,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of Ie(e))!ye.call(o,a)&&a!==t&&G(o,a,{get:()=>e[a],enumerable:!(r=ve(e,a))||r.enumerable});return o};var W=(o,e,t)=>(t=o!=null?Se(Ee(o)):{},J(e||!o||!o.__esModule?G(t,"default",{value:o,enumerable:!0}):t,o)),Ce=o=>J(G({},"__esModule",{value:!0}),o);var Fe={};Te(Fe,{activate:()=>Re,deactivate:()=>Ge,detectNetWorkspace:()=>he});module.exports=Ce(Fe);var y=require("vscode");var m=require("vscode");var K="di-navigator.selectProject",Y="di-navigator.clearProjectSelection",B="di-navigator.refreshServices",F="di-navigator.goToImplementation",$="di-navigator.goToInjectionSite",R="diNavigator.selectedProject",z=["**/*.sln","**/*.slnx","**/*.csproj"],q="No .sln or .csproj files found in workspace.",Z="Project selection cleared - scanning entire workspace.",ee="DI Services refreshed",te="No implementation found for this service.";var oe="Go to Implementation",re="Go to Injection Site",ie="diNavigator:validWorkspace",L=["**/bin/**","**/obj/**","**/Properties/**"],x=["**/*.csproj","**/*.sln","**/*.slnx","**/*.cs"],M="diNavigator",A="excludeFolders";var se="folder",ne="symbol-class",_="warning",ce="symbol-method",k=["Singleton","Scoped","Transient"];var j=require("vscode"),N=W(require("path"));var O=W(require("fs")),D=W(require("path"));var le=require("child_process"),ae=o=>{switch(o){case"Singleton":return"Singleton";case"Scoped":return"Scoped";case"Transient":return"Transient";default:return"Transient"}},pe=o=>{let e=D.basename(o),t=[],r=[],a=[],p={};try{let u=D.join(".","tools","roslyn-di-analyzer","bin","Debug","net8.0","roslyn-di-analyzer.dll");if(!O.existsSync(u))throw new Error("Roslyn tool not built.");let l=`dotnet "${u}" --project "${o}"`,n=(0,le.execSync)(l,{encoding:"utf8",cwd:D.dirname(o)}),c=JSON.parse(n);for(let s of c.Registrations){let f=ae(s.Lifetime);t.push({id:s.Id,lifetime:f,serviceType:s.ServiceType,implementationType:s.ImplementationType||s.ServiceType,filePath:s.FilePath,lineNumber:s.LineNumber,methodCall:s.MethodCall})}for(let s of c.InjectionSites)r.push({filePath:s.FilePath,lineNumber:s.LineNumber,className:s.ClassName,memberName:s.MemberName,type:s.Type,serviceType:s.ServiceType,linkedRegistrationIds:s.LinkedRegistrationIds||[]});a.push(...c.Cycles||[]),p=c.DependencyGraph||{},console.log(`Parsed project ${e}: ${t.length} registrations, ${r.length} sites, ${a.length} cycles`)}catch(u){console.error(`Error parsing project ${o}:`,u);try{let l=fe(o);for(let n of l){let c=O.readFileSync(n,"utf8"),s=/(builder\.Services|services)\.Add(?:Scoped|Singleton|Transient)<([^>]+)>(?:,\s*([^>]+))?\s*\(\s*(new\s+[^)]+)?\s*\)/g,f;for(;(f=s.exec(c))!==null;){let[,,h,P]=f,T=f[0].match(/Add(\w+)/)?.[1]||"Transient",v=ae(T),w=c.substring(0,f.index).split(`
`).length;t.push({id:`reg-${D.basename(n)}-${w}`,lifetime:v,serviceType:h.trim(),implementationType:P?P.trim():h.trim(),filePath:n,lineNumber:w,methodCall:f[0]})}let d=/public\s+([^\s(]+)\s*\(\s*([^\)]+)\s*\)/g,g;for(;(g=d.exec(c))!==null;){let h=g[1],T=g[2].match(/([^\s,]+)\s+[\w]+/g)||[],v=c.substring(0,g.index).split(`
`).length;for(let w of T){let b=w.trim();r.push({filePath:n,lineNumber:v,className:h,memberName:h,type:"constructor",serviceType:b,linkedRegistrationIds:[]})}}}console.log(`Fallback parsed ${t.length} registrations, ${r.length} sites for ${e}`)}catch(l){console.error(`Fallback failed for ${o}:`,l)}}let S=new Map;for(let u of t){let l=S.get(u.serviceType);l||(l={name:u.serviceType,registrations:[],injectionSites:[],hasConflicts:!1,conflicts:[]},S.set(u.serviceType,l)),l.registrations.push(u)}for(let u of r){let l=S.get(u.serviceType);l&&l.injectionSites.push(u)}let E=[];for(let u of k){let l=Array.from(S.values()).filter(n=>n.registrations.some(c=>c.lifetime===u));l.length>0&&E.push({lifetime:u,services:l,color:we(u)})}return{projectPath:o,projectName:e,serviceGroups:E,cycles:a,dependencyGraph:p}},we=o=>{switch(o){case"Singleton":return"#FF5722";case"Scoped":return"#2196F3";case"Transient":return"#4CAF50";case"Others":return"#808080";default:return"#9E9E9E"}};function fe(o){let e=[];try{let t=O.readdirSync(o,{withFileTypes:!0});for(let r of t){let a=D.join(o,r.name);r.isDirectory()?e=e.concat(fe(a)):r.name.endsWith(".cs")&&e.push(a)}}catch(t){console.error(`Error reading directory ${o}:`,t)}return e}var H=class{projectDI=[];allServices=[];context;dirty=!1;setContext(e){this.context=e}getExcludeGlob(){let t=j.workspace.getConfiguration(M).get(A)??Array.from(L);return t.length>1?`{${t.join(",")}}`:t[0]}clearState(){this.context&&this.context.globalState.update(R,void 0),this.projectDI=[],this.allServices=[],this.dirty=!1}async collectRegistrations(e){if(!this.context){console.error("Extension context not set. Cannot access global state.");return}let t=this.getExcludeGlob(),r=[];if(!j.workspace.workspaceFolders||j.workspace.workspaceFolders.length===0){console.warn("No workspace folders found.");return}for(let l of j.workspace.workspaceFolders){let n=l.uri.fsPath;try{let c=new j.RelativePattern(l,"**/*.{csproj,sln}"),s=await j.workspace.findFiles(c,t),f=s.filter(v=>v.fsPath.endsWith(".sln")),d=s.filter(v=>v.fsPath.endsWith(".csproj"));console.log(`Found ${f.length} solution files and ${d.length} project files in folder ${l.name}`),console.log("Solution files:",f.map(v=>v.fsPath)),console.log("Project files:",d.map(v=>v.fsPath));let g=[...new Set(f.map(v=>N.dirname(v.fsPath)))],P=d.map(v=>N.dirname(v.fsPath)).filter(v=>!g.some(w=>{let b=N.relative(w,v);return b!==""&&!b.startsWith("..")})),T=[...g,...P].map(v=>N.resolve(n,N.relative(n,v)));r.push(...T)}catch(c){console.error(`Error finding projects in folder ${n}:`,c)}}r.length===0&&console.warn("No .NET projects found in workspace folders.");let a=[],p=r.length,S=0;for(let l of r){let n=N.basename(l);e?.report({increment:S/p*100,message:`Parsing project ${n} with Roslyn analyzer`}),console.log(`Parsing project ${n} with Roslyn analyzer`);let c=await pe(l);a.push(c),S++;let s=c.serviceGroups.reduce((d,g)=>d+g.services.reduce((h,P)=>h+P.registrations.length,0),0),f=c.serviceGroups.reduce((d,g)=>d+g.services.reduce((h,P)=>h+P.injectionSites.length,0),0);console.log(`Project ${n}: ${s} registrations, ${f} sites, ${c.cycles.length} cycles`),s===0&&console.warn(`No DI registrations found in project ${n}.`)}let E=a.reduce((l,n)=>l+n.serviceGroups.reduce((c,s)=>c+s.services.reduce((f,d)=>f+d.registrations.length,0),0),0),u=a.reduce((l,n)=>l+n.serviceGroups.reduce((c,s)=>c+s.services.reduce((f,d)=>f+d.injectionSites.length,0),0),0);e?.report({increment:100,message:`Scan complete: ${a.length} projects, ${E} registrations, ${u} sites`}),console.log(`Total projects parsed: ${a.length}, Total registrations: ${E}, Total injection sites: ${u}`),a.length===0&&console.warn("No .NET projects found in workspace."),this.projectDI=a,this.allServices=[];for(let l of a)for(let n of l.serviceGroups)this.allServices.push(...n.services)}getLifetimeColor(e){switch(e){case"Singleton":return"#FF5722";case"Scoped":return"#2196F3";case"Transient":return"#4CAF50";default:return"#9E9E9E"}}getProjectDI(){return this.projectDI.filter(e=>e.serviceGroups.some(t=>t.services.some(r=>r.registrations.length>0)))}invalidateFile(e){this.dirty=!0,this.allServices=[],console.log(`Invalidated cache due to change in ${e}`)}getServiceGroups(){if(this.projectDI.length===0){let e=[];for(let t of k){let r=this.allServices.filter(a=>a.registrations.some(p=>p.lifetime===t)).length;r>0&&e.push({lifetime:t,services:[],color:this.getLifetimeColor(t),count:r})}return e}else{let e=[];for(let t of this.projectDI)for(let r of t.serviceGroups)e.push({...r,count:r.services.length});return e}}getServicesForLifetime(e){return this.allServices.filter(t=>t.registrations.some(r=>r.lifetime===e))}getAllServices(){return this.allServices}async refresh(){this.dirty&&await this.collectRegistrations(),this.dirty=!1}},I=new H;var Ne=o=>o.map(e=>({type:e.type,details:e.details})),de=o=>o?.projectPath!==void 0&&Array.isArray(o.serviceGroups),ge=o=>o?.lifetime!==void 0&&Array.isArray(o.services),De=o=>o?.filePath!==void 0&&o.lineNumber!==void 0,me=o=>o?.name!==void 0&&Array.isArray(o.registrations),je=o=>o?.type!==void 0&&o?.details!==void 0,xe=o=>o instanceof m.TreeItem,X=class{_onDidChangeTreeData=new m.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;getTreeItem(e){if(de(e)){let t=new m.TreeItem(e.projectName,m.TreeItemCollapsibleState.Collapsed),r=0;e.serviceGroups.forEach(S=>r+=S.services.length);let a=`${e.serviceGroups.length} lifetimes, ${r} services`;e.cycles&&e.cycles.length>0&&(a+=`, ${e.cycles.length} cycles`);let p=e.dependencyGraph;if(p){let S=Object.keys(p).length,E=Object.values(p).reduce((u,l)=>u+l.length,0);a+=`, ${S} nodes, ${E} edges`,t.tooltip=`${e.projectPath}
Dependency Graph: ${S} nodes, ${E} edges`}return t.description=a,t.iconPath=new m.ThemeIcon("file-directory"),e.cycles&&e.cycles.length>0&&(t.iconPath=new m.ThemeIcon(_)),t.tooltip=e.projectPath,t}else if(ge(e)){let t=new m.TreeItem(e.lifetime,m.TreeItemCollapsibleState.Collapsed);return t.description=`${e.services.length} services`,t.iconPath=new m.ThemeIcon(se),t.resourceUri=void 0,t}else if(me(e)){let t=new m.TreeItem(e.name,m.TreeItemCollapsibleState.Collapsed);return t.description=`${e.registrations.length} registrations${e.injectionSites?.length?`, ${e.injectionSites.length} injection sites`:""}${e.hasConflicts?`, ${e.conflicts?.length||0} conflicts`:""}`,t.iconPath=new m.ThemeIcon(ne),e.hasConflicts&&(t.iconPath=new m.ThemeIcon(_)),t.command={command:F,title:oe,arguments:[e]},t}else if(De(e)){let t=new m.TreeItem(`${e.className}.${e.memberName} (${e.serviceType})`,m.TreeItemCollapsibleState.None);return t.description=`Line ${e.lineNumber}`,t.iconPath=new m.ThemeIcon(ce),t.command={command:$,title:re,arguments:[e]},t}else if(je(e)){let t=new m.TreeItem(`${e.type}`,m.TreeItemCollapsibleState.None);return t.description=e.details,t.iconPath=new m.ThemeIcon(_),t.tooltip=e.details,t}return e}getChildren(e){if(e)if(de(e)){let t=[...e.serviceGroups];if(e.cycles&&e.cycles.length>0){let r=new m.TreeItem("Cycles",m.TreeItemCollapsibleState.Collapsed);r.description=`${e.cycles.length} cycles detected`,r.iconPath=new m.ThemeIcon(_),r.contextValue=e.projectPath,t.push(r)}return t}else{if(ge(e))return e.services;if(me(e)){let t=[...e.injectionSites||[]];return e.hasConflicts&&e.conflicts&&e.conflicts.length>0&&t.push(...Ne(e.conflicts)),t}else if(xe(e)&&e.contextValue&&typeof e.contextValue=="string"&&e.label==="Cycles"){let t=I.getProjectDI().find(r=>r.projectPath===e.contextValue);return t&&t.cycles?t.cycles.map(r=>{let a={type:"Cycle",details:r},p=new m.TreeItem(r,m.TreeItemCollapsibleState.None);return p.description=r,p.iconPath=new m.ThemeIcon(_),p.tooltip=r,p}):[]}else return[]}else return I.getProjectDI()}async refresh(){this._onDidChangeTreeData.fire(void 0)}},C=new X;var i=require("vscode");async function _e(o){let e="cachedProjects",r=o.workspaceState.get(e);if(r&&Date.now()-r.timestamp<3e5)return r.uris;let a=[];try{for(let S of z)try{let E=await i.workspace.findFiles(S);a.push(...E)}catch(E){console.error(`Error scanning pattern ${S}: ${E}`),i.window.showWarningMessage(`Scan failed for ${S}`)}let p=Array.from(new Set(a.map(S=>S.fsPath))).map(S=>i.Uri.file(S));return await o.workspaceState.update(e,{uris:p,timestamp:Date.now()}),p}catch(p){return console.error(`Error in findProjectFiles: ${p}`),i.window.showWarningMessage("Failed to find projects. Check workspace permissions."),await o.workspaceState.update(e,void 0),[]}}async function U(o,e){try{let t=i.Uri.file(o);await i.workspace.fs.stat(t);let r=await i.workspace.openTextDocument(t);return await i.window.showTextDocument(r,{selection:new i.Range(e-1,0,e-1,0)}),!0}catch(t){return t instanceof i.FileSystemError&&t.code==="EntryNotFound"?i.window.showWarningMessage(`File not found: ${o}`):t instanceof Error?i.window.showErrorMessage(`Error opening ${o}: ${t.message}`):i.window.showErrorMessage(`Error opening ${o}: Unknown error`),!1}}function ue(o){let e=i.commands.registerCommand(K,async()=>{let n=await _e(o);if(n.length===0){i.window.showErrorMessage(q);return}let c=n.map(s=>s.fsPath);await o.globalState.update(R,c),await I.refresh(),await C.refresh(),i.window.showInformationMessage(`Scanned ${n.length} projects for DI registrations.`),console.log("Scan All Projects command executed.")}),t=i.commands.registerCommand(Y,async()=>{console.log("DI Navigator: Clear Selection command executed."),await o.globalState.update(R,void 0),await I.refresh(),await C.refresh(),i.window.showInformationMessage(Z)}),r=i.commands.registerCommand(B,async()=>{console.log("DI Navigator: Refresh Services command executed."),await I.refresh(),await C.refresh(),i.window.showInformationMessage(ee)}),a=i.commands.registerCommand("di-navigator.searchServices",async()=>{let n=I.getAllServices();if(!n.length){i.window.showInformationMessage("No DI services found.");return}let c=await i.window.showQuickPick(n.map(f=>({label:f.name,detail:`${f.registrations.length} registrations`,service:f})),{placeHolder:"Select a service to navigate to"});if(!c)return;let s=c.service.registrations[0];s&&await U(s.filePath,s.lineNumber)&&console.log(`Navigated to service ${c.service.name} at ${s.filePath}:${s.lineNumber}`)}),p=i.commands.registerCommand(F,async n=>{if(!n||n.registrations.length===0){i.window.showInformationMessage(te),console.log("Go to DI Implementation command executed: No registrations.");return}let c;if(n.registrations.length===1)c=n.registrations[0];else{let f=n.registrations.map(g=>({label:`${i.workspace.asRelativePath(i.Uri.file(g.filePath))}:${g.lineNumber}`,detail:g.filePath,registration:g})),d=await i.window.showQuickPick(f,{placeHolder:"Select implementation to navigate to",canPickMany:!1});if(!d){console.log("Go to DI Implementation command cancelled.");return}c=d.registration}let s=await U(c.filePath,c.lineNumber);console.log(s?`Go to DI Implementation command executed: ${c.filePath}:${c.lineNumber}`:"Go to DI Implementation command failed: Invalid file.")}),S=i.commands.registerCommand($,async n=>{if(!n){i.window.showInformationMessage("No injection site selected."),console.log("Go to Injection Site command executed: No site provided.");return}let c=await U(n.filePath,n.lineNumber);console.log(c?`Go to Injection Site command executed: ${n.filePath}:${n.lineNumber}`:"Go to Injection Site command failed: Invalid file.")}),E=i.commands.registerCommand("di-navigator.resolveConflicts",async()=>{let n=I.getServiceGroups(),c=[];for(let f of n)for(let d of f.services)d.hasConflicts&&d.conflicts&&c.push(...d.conflicts.map(g=>({label:`${d.name}: ${g.type}`,detail:g.details,conflict:g,service:d})));if(c.length===0){i.window.showInformationMessage("No conflicts found in DI registrations.");return}let s=await i.window.showQuickPick(c,{placeHolder:"Select a conflict to resolve",canPickMany:!1});if(s){if(s.conflict.type==="DuplicateImplementation"){let f=["Navigate to first","Navigate to second","Remove duplicate (first)","Remove duplicate (second)","Cancel"],d=await i.window.showQuickPick(f,{placeHolder:"How to resolve?"});if(d&&d.includes("Remove")&&s.service.registrations.length>1){let g=s.service.registrations.filter(h=>h.implementationType===s.conflict.details.split(" ")[0]);if(g.length>1){let h=d.includes("first")?g[0]:g[1];if(await i.window.showQuickPick(["Yes, remove","No"],{placeHolder:"Confirm removal of registration at "+h.filePath+":"+h.lineNumber})==="Yes, remove"){try{let T=i.Uri.file(h.filePath),v=await i.workspace.openTextDocument(T),w=new i.Position(h.lineNumber-1,0),b=new i.Range(w,w),V=new i.WorkspaceEdit;V.insert(T,w,"// "),await i.workspace.applyEdit(V)?i.window.showInformationMessage(`Commented out duplicate registration at ${h.filePath}:${h.lineNumber}.`):i.window.showWarningMessage(`Failed to apply edit to ${h.filePath}.`)}catch(T){console.error("Error editing file:",T);let v=T instanceof Error?T.message:"Unknown error";i.window.showErrorMessage(`Failed to edit ${h.filePath}: ${v}`)}await I.refresh(),await C.refresh()}}}else if(d==="Navigate to first"||d==="Navigate to second"){let g=s.service.registrations[0];await U(g.filePath,g.lineNumber)}}else if(s.conflict.type==="MultipleImplementations"){let f=new Set(s.service.registrations.map(h=>h.implementationType)),d=Array.from(f),g=await i.window.showQuickPick(d,{placeHolder:"Select preferred implementation, others will be marked for removal"});g&&i.window.showInformationMessage(`Preferred impl: ${g}. Manually remove others.`)}else i.window.showInformationMessage(`Conflict "${s.conflict.type}": ${s.conflict.details}. Manual resolution recommended.`);console.log("Resolve Conflicts command executed.")}}),u=()=>{o.workspaceState.update("cachedProjects",void 0)},l=i.workspace.onDidChangeWorkspaceFolders(u);o.subscriptions.push(l),o.subscriptions.push(e,t,r,a,p,S,E),console.log("All DI Navigator commands registered successfully.")}var Oe=(o,e)=>{let t;return(...r)=>{clearTimeout(t),t=setTimeout(()=>o.apply(null,r),e)}};function be(o){let t=y.workspace.getConfiguration(M).get(A)||Array.from(o);return t.length>1?`{${t.join(",")}}`:t[0]}async function he(){try{let o=be(L),e=await y.workspace.findFiles(x[0],o),t=await y.workspace.findFiles(x[1],o),r=await y.workspace.findFiles(x[2],o),a=await y.workspace.findFiles(x[3],o);return e.length>0||t.length>0||r.length>0||a.length>0}catch(o){return console.error("Error detecting .NET workspace:",o),!1}}async function Re(o){console.log('Congratulations, your extension "di-navigator" is now active!'),I.setContext(o);let e=y.window.registerTreeDataProvider("diNavigator",C);o.subscriptions.push(e);let t=async()=>{let a=await he();await y.commands.executeCommand("setContext",ie,a),a?(console.log(".NET workspace detected. Refreshing DI services."),y.window.withProgress({location:y.ProgressLocation.Notification,title:"DI Navigator: Scanning C# files",cancellable:!1},async p=>{await I.collectRegistrations(p),C.refresh()}).then(()=>{},p=>{console.error("Error during DI scan:",p),C.refresh()})):(console.log("Non-.NET workspace. Clearing DI analysis."),I.clearState(),C.refresh())};t().catch(a=>console.error("Error during initial workspace detection:",a));let r=Oe(t,500);x.forEach(a=>{let p=y.workspace.createFileSystemWatcher(a);p.onDidCreate(r),p.onDidDelete(r),p.onDidChange(r),o.subscriptions.push(p)}),ue(o)}function Ge(){I.clearState(),C.refresh()}0&&(module.exports={activate,deactivate,detectNetWorkspace});
